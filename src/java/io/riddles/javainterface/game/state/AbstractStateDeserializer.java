/*
 * Copyright 2016 riddles.io (developers@riddles.io)
 *
 *     Licensed under the Apache License, Version 2.0 (the "License");
 *     you may not use this file except in compliance with the License.
 *     You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 *     Unless required by applicable law or agreed to in writing, software
 *     distributed under the License is distributed on an "AS IS" BASIS,
 *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *     See the License for the specific language governing permissions and
 *     limitations under the License.
 *
 *     For the full copyright and license information, please view the LICENSE
 *     file that was distributed with this source code.
 */

package io.riddles.javainterface.game.state;

import java.util.ArrayList;

import io.riddles.javainterface.game.player.AbstractPlayer;
import io.riddles.javainterface.serialize.Deserializer;

/**
 * io.riddles.javainterface.engine.state.AbstractStateDeserializer - Created on 3-6-16
 *
 * DO NOT EDIT THIS FILE
 *
 * Extend this class if you want to create a state deserializer
 *
 * @author Jim van Eeden - jim@riddles.io
 */
public abstract class AbstractStateDeserializer<P extends AbstractPlayer,S extends AbstractState>
        implements Deserializer<S> {

    private ArrayList<P> players;

    public AbstractStateDeserializer(ArrayList<P> players) {
        this.players = players;
    }

    protected ArrayList<P> getPlayers() {
        return this.players;
    }

    public abstract S traverse(String statesString);
}
